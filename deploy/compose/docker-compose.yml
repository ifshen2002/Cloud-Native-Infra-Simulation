version: "3.9"

services:
  traefik:
    image: traefik:v3.1
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --api.dashboard=true
      - --metrics.prometheus=true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/dynamic:/etc/traefik/dynamic:ro
    labels:
      - "traefik.enable=true"
    networks:
      - app_net

  api:
    build:
      context: ../../apps/api
    image: ${REGISTRY:-local}/api:${TAG:-dev}
    pull_policy: never
    environment:
      - APP_VERSION=${APP_VERSION:-0.1.0}
      - GIT_SHA=${GIT_SHA:-dev}
      - OTEL_SERVICE_NAME=api
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=otlp
      - OTEL_LOGS_EXPORTER=otlp
      - OTEL_PYTHON_EXPERIMENTAL_AUTO_INSTRUMENTATION_METRICS=true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.middlewares.api-stripprefix.stripPrefix.prefixes=/api"
      - "traefik.http.routers.api.middlewares=api-stripprefix,api-ratelimit@file,security-headers@file"
      - "traefik.http.services.api.loadbalancer.server.port=8000"
    depends_on:
      - db
      - redis
      - otel-collector
    networks:
      - app_net
    command: ["opentelemetry-instrument", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]

  db:
    image: postgres:16
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-app}
      - POSTGRES_USER=${POSTGRES_USER:-app}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-app}
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - app_net

  postgres_exporter:
    image: quay.io/prometheuscommunity/postgres-exporter:v0.15.0
    environment:
      - DATA_SOURCE_NAME=postgresql://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:-app}@db:5432/${POSTGRES_DB:-app}?sslmode=disable
    networks:
      - app_net

  redis:
    image: redis:7
    command: ["redis-server", "--appendonly", "no"]
    networks:
      - app_net

  redis_exporter:
    image: oliver006/redis_exporter:v1.62.0
    command: ["--redis.addr=redis:6379"]
    networks:
      - app_net

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    command:
      - --enable_metrics=cpu,memory,network,disk,process
    privileged: true
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - "8082:8080"
    networks:
      - app_net

  grafana:
    image: grafana/grafana:11.1.4
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s/grafana
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    ports:
      - "3000:3000"
    volumes:
      - ../../observability/grafana/provisioning:/etc/grafana/provisioning:ro
      - ../../observability/grafana/dashboards:/var/lib/grafana/dashboards:ro
    networks:
      - app_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=PathPrefix(`/grafana`)"
      - "traefik.http.routers.grafana.entrypoints=web"
      - "traefik.http.routers.grafana.middlewares=grafana-auth@file,security-headers@file"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.95.0
    command: ["--config=/etc/otelcol/config.yaml"]
    volumes:
      - ../../observability/otel-collector/config.yaml:/etc/otelcol/config.yaml:ro
    networks:
      - app_net

  prometheus:
    image: prom/prometheus:v2.53.1
    volumes:
      - ../../observability/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ../../observability/prometheus/alerts.yml:/etc/prometheus/alerts.yml:ro
      - prom_data:/prometheus
    networks:
      - app_net

  alertmanager:
    image: prom/alertmanager:v0.27.0
    volumes:
      - ../../observability/alertmanager/config.yml:/etc/alertmanager/config.yml:ro
    command: ["--config.file=/etc/alertmanager/config.yml"]
    ports:
      - "9093:9093"
    networks:
      - app_net

  loki:
    image: grafana/loki:3.1.1
    command: ["-config.file=/etc/loki/config.yml"]
    volumes:
      - ../../observability/loki/loki-config.yml:/etc/loki/config.yml:ro
      - loki_data:/loki
    networks:
      - app_net

  tempo:
    image: grafana/tempo:2.5.0
    command: ["-config.file=/etc/tempo/config.yml"]
    volumes:
      - ../../observability/tempo/tempo-config.yml:/etc/tempo/config.yml:ro
    networks:
      - app_net

  promtail:
    image: grafana/promtail:3.1.1
    command: ["-config.file=/etc/promtail/config.yml"]
    volumes:
      - ../../observability/promtail/promtail-config.yml:/etc/promtail/config.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - app_net

  blackbox:
    image: prom/blackbox-exporter:v0.25.0
    command: ["--config.file=/etc/blackbox/blackbox.yml"]
    volumes:
      - ../../observability/blackbox/blackbox.yml:/etc/blackbox/blackbox.yml:ro
    networks:
      - app_net

  cloudflared:
    image: cloudflare/cloudflared:2024.8.3
    command: tunnel --no-autoupdate --url http://traefik:80 --protocol http2
    networks:
      - app_net

networks:
  app_net:
    driver: bridge

volumes:
  pg_data:
  prom_data:
  loki_data:
  


